<?php
/**
 * 售后服务管理
 * User: lwh
 */
namespace Home\Controller;

use Think\Controller;

class ServiceController extends IndexController
{
/*
 *售后服务管理
 */
    public function serviceindex()
    {
        $search = I();
        if ($search['seller_id'] != null) {
            $map['o.seller_id'] = $search['seller_id'];
        }
        if ($search['order_number'] != null) {
            $sid                   = $search['order_number'];
            $map['o.order_number'] = array("like", "%$sid%");
        }
        if ($search['status'] != null) {

            $map['s.type'] = $search['status'];
            // $status          = $this->statusselect($search['status']);
        }

        $data = M()->table('__CUSTOMER_SERVICE__ cs')
        // ->where($map)
            ->join('left join __ORDERS__ o on o.id = cs.order_id')
            ->join('left join __USER__ m on m.id = cs.user_id')
            ->join('left join __SELLER__ s on s.id = cs.seller_id')
            ->page($_GET['p'] . ',20')->order('cs.status')
            ->field('cs.*,m.username,o.order_number,s.name as seller_name')
            ->select();
        $count = M()->table('__CUSTOMER_SERVICE__ cs')->where($map)
            ->join('left join __ORDERS__ o on o.id = cs.order_id')
            ->join('left join __USER__ m on m.id = cs.user_id')
            ->join('left join __SELLER__ s on s.id = cs.seller_id')
            ->count();

        // $status = $this->status();
        // }
        $seller = M('seller')->field('id,name')->select();
        $Page   = new \Think\Page($count, 20);
        $show   = $Page->show();
        $this->assign('page', $show);
        $this->assign('data', $data);
        $this->assign('count', $count);
        $this->assign('seller', $seller);
        // $this->assign('status', $status);
        $this->assign('search', $search);
        $this->display();
    }
    /*状态自己定义*/
    // private function status()
    // {
    //     $status = array(
    //         array('status' => null, 'name' => "全部状态"),
    //         array('status' => 0, 'name' => "待处理"),
    //         array('status' => 1, 'name' => "待退款"),
    //         array('status' => 2, 'name' => "已完成"),
    //         array('status' => 2, 'name' => "已拒绝"),
    //     );
    //     return $status;
    // }
    /*search  状态定义*/
    // private function statusselect($id)
    // {
    //     $status = array(
    //         array('status' => null, 'name' => "全部状态"),
    //         array('status' => 0, 'name' => "待处理"),
    //         array('status' => 1, 'name' => "待退款"),
    //         array('status' => 2, 'name' => "已完成"),
    //         array('status' => 2, 'name' => "已拒绝"),
    //     );
    //     $st['num'] = $status[$id + 1];
    //     unset($status[$id + 1]);
    //     $arr = array_merge($st, $status);
    //     return $arr;
    // }
    /*
     *售后服务管理-详情
     */
    public function serviceinfo()
    {

        $data = M()->table('__CUSTOMER_SERVICE__ cs')
            ->where($where = array('cs.id' => I('id')))
            ->join('left join __ORDER_GOODS__ og on og.order_id = cs.order_id and og.goods_id = cs.goods_id')
            ->join('left join __ORDERS__ o on o.id = og.order_id')
            ->join('left join __GOODS__ g on g.id = si.goods_id')
            ->field('
            cs.service_id,
            g.id as goods_id,
            g.goods_name,
            o.order_number,
            cs.service_reason
            ')
            ->select();
        // dump($service);
        // dump($data);
        // $this->assign('service', $service);
        $this->assign('data', $data);
        $this->display();
    }

/*
 *售后服务管理-处理
 */
    public function pass()
    {
        $arr = I(); //type 0退货1退款2换货->status132
        if ($arr['type'] == 0) {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 1;
            $data->save();
        } elseif ($arr['type'] == 1) {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 1;
            $data->save();
        } else {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 2;
            $data->save();
        }
        $this->success('操作成功！', U('/home/service/serviceindex'));
    }
/*
 *售后服务管理-拒绝
 */
    public function no()
    {
        $arr = I(); //type 0退货1换货2退款->status567
        if ($arr['type'] == 0) {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 5;
            $data->save();
        } elseif ($arr['type'] == 1) {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 6;
            $data->save();
        } else {
            $data         = M('customer_service');
            $data->id     = $arr['id'];
            $data->status = 7;
            $data->save();
        }
        $this->success('操作成功！', U('/home/service/serviceindex'));
    }
    /*
     *售后服务管理-待通过--退货--接受
     */
    public function servicegoods()
    {
        /*售后服务状态*/
        $data         = M('customer_service');
        $data->id     = I('id');
        $data->status = 1;
        $data->save();
        $this->success('退货成功！', U('/home/service/serviceindex'));
    }
    /*
     *售后服务管理-待通过--换货--拒绝
     */
    public function servicenochange()
    {
        /*售后服务状态*/
        $data         = M('customer_service');
        $data->id     = I('id');
        $data->status = 6;
        $data->save();
        $this->success('拒绝换货！', U('/home/service/serviceindex'));
    }
    /*
     *售后服务管理-待退款--退货--接受->已完成
     *订单->已关闭
     */
    public function serviceprice()
    {
        $arr = I();
        /*订单状态*/
        $data               = M('orders');
        $data->id           = I('order_id');
        $data->order_status = 5;
        $data->save();
        /*售后服务状态*/
        $data         = M('customer_service');
        $data->id     = I('id');
        $data->status = 3;
        $data->save();
        //member  金额增加
        $order = M()
            ->table('__CUSTOMER_SERVICE__ cs')
            ->where($where = array('cs.id' => $arr['id']))
            ->join('left join __ORDER_GOODS__ og on og.order_id = cs.order_id and og.goods_id = cs.goods_id')
            ->group('cs.id')
            ->field('cs.*,sum(og.goods_number*og.price) as allprice')
            ->find();

        M('user')->where(array('id' => I('user_id')))->setInc('balance', $order['total_price']);

        // $meminfo      = M('member')->where($where = array('id' => $arr['member_id']))->field('balance')->find();
        // $mem          = M('member');
        // $mem->id      = $arr['member_id'];
        // $mem->balance = $meminfo['balance'] + $order['allprice'];
        // $mem->save();
        //修改库存
        $serviceinfo = M()->table('__CUSTOMER_SERVICE__ cs')
            ->join('left join __ORDER_GOODS__ og on og.order_id = cs.order_id and og.goods_id = cs.goods_id')
            ->join('left join __GOODS_ATTRIBUTE_INFO__ gai on gai.goods_id = og.goods_id and gai.goods_attribute_id = og.goods_attr_id ')
            ->where($where = array('cs.id' => $arr['id']))
            ->field('gai.id,(gai.stock+og.goods_number)as num')->select();
        for ($i = 0; $i < count($serviceinfo); $i++) {
            $service_goodsstock        = M('goods_attribute_info');
            $service_goodsstock->id    = $serviceinfo[$i]['id'];
            $service_goodsstock->stock = $serviceinfo[$i]['num'];
            $service_goodsstock->save();
        }
        $this->success('成功退款！', U('/home/service/serviceindex'));
    }
    /*
     *售后服务管理-待退款--退货--拒绝->拒绝退款
     */
    public function servicenoprice()
    {
        /*售后服务状态*/
        $data         = M('customer_service');
        $data->id     = I('id');
        $data->status = 7;
        $data->save();
        $this->success('拒绝退款！', U('/home/service/serviceindex'));
    }
    /*
     *售后服务管理-待退货--收货-type=0 待换货--收货-type=1
     */
    public function servicereceipt()
    {
        $arr = I();
        if ($arr['type'] == 0) {
            /*订单状态*/
            $data              = M('orders');
            $data->id          = I('id');
            $data->post_status = 5;
            $data->save();
            /*会员余额添加*/
            $order = M()
                ->table('__CUSTOMER_SERVICE__ cs')
                ->where($where = array('cs.id' => $arr['id']))
                ->join('left join __ORDER_GOODS__ og on og.order_id = cs.order_id and og.goods_id = cs.goods_id')
                ->group('cs.id')
                ->field('cs.*,sum(og.goods_number*og.price) as allprice')
                ->find();

            M('user')->where(array('id' => I('user_id')))->setInc('balance', $order['total_price']);
            //修改库存
            $serviceinfo = M()->table('__CUSTOMER_SERVICE__ cs')
                ->join('left join __ORDER_GOODS__ og on og.order_id = cs.order_id and og.goods_id = cs.goods_id')
                ->join('left join __GOODS_ATTRIBUTE_INFO__ gai on gai.goods_id = og.goods_id and gai.goods_attribute_id = og.goods_attr_id ')
                ->where($where = array('cs.id' => $arr['id']))
                ->field('gai.id,(gai.stock+og.goods_number)as num')->select();
            for ($i = 0; $i < count($serviceinfo); $i++) {
                $service_goodsstock        = M('goods_attribute_info');
                $service_goodsstock->id    = $serviceinfo[$i]['id'];
                $service_goodsstock->stock = $serviceinfo[$i]['num'];
                $service_goodsstock->save();
            }
            /*售后服务状态*/
            $data         = M('customer_service');
            $data->id     = I('id');
            $data->status = 4;
            $data->save();
            $this->success('收货结束！', U('/home/service/serviceindex'));
        } elseif ($arr['type'] == 1) {
            $id      = I('id'); //售后服务id
            $orderid = I('order_id'); //订单id
            $class   = M('logistics')->where($where = array('is_disable' => 0))->select();
            $order   = M()->table('__ORDERS__')
                ->where($where = array('id' => $orderid))
                ->find();
            $this->assign('order', $order);
            $this->assign('class', $class);
            $this->assign('id', $id);
            $this->assign('orderid', $orderid);
            $this->display();
        }
    }
}
