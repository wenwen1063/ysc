<?php
namespace Home\Controller;

use Think\Controller;

class IndexController extends Controller
{
    public function index()
    {
        // $this->wx_callback();
        cookie('user_id', '48');
        $map['ad_position']   = 1;
        $mapm['is_recommend'] = 1;
        $mapm['is_disable']   = 0;
        $mapm['sort']         = array('neq', 0);
        $time                 = time();
        // $actmap['a.start_time'] = array('lt', $time);
        // $actmap['a.end_time']   = array('gt', $time);
        $actmap['a.status']     = 1;
        $classmap['is_disable'] = 0;
        //获取轮播图片
        $picinfo = M('ad')->where($map)->field('id,ad_sort,img,img2,ad_type')->limit(6)->order('ad_sort asc')->select();
        // dump($picinfo);
        //获取商家信息
        $shop = M('seller')->where($mapm)->field('id,sort,forshort,logo')->limit(6)->order('sort asc')->select();
        // dump($shop);
        //获取公告信息
        $notic = M('notice')->order('id desc')->limit(5)->select();
        //营销活动
        // $activity = M()->table('__ACTIVITY__ a')
        // ->join('__ACTIVITY_GOODS__ ag on ag.activity_id = a.id')
        // ->field('a.*,ag.goods_id')
        // ->where('a.start_time<' . $time . ' and a.end_time>' . $time)
        // ->limit(1)->where($actmap)->select();
        $mapac['is_recommend'] = 1;
        $activity              = M()->table('__ACTIVITY_IMG__ a')
            ->where($mapac)->select();
        // dump($activity);
        //热销分类商品
        $cmap['gc.is_disable']   = 0;
        $cmap['gcs.is_disable']  = 0;
        $cmap['gct.is_disable']  = 0;
        $cmap['g.is_delete']     = 0;
        $cmap['g.is_on_sale']    = 1;
        $cmap['g.is_recommend']  = 1;
        $cmap['gc.is_recommend'] = 1;
        $goods                   = M()->table('__GOODS__ g')
            ->join('left join __GOODS_AND_CLASS__ gac on gac.goods_id = g.id')
            ->join('left join __GOODS_CLASS_SAN__ gcs on gcs.id = gac.gcs_id')
            ->join('left join __GOODS_CLASS_TWO__ gct on gct.id = gcs.gct_id')
            ->join('left join __GOODS_CLASS__ gc on gc.id = gct.goods_class_id')
            ->join('left join __GOODS_ATTRIBUTE_INFO__ gai on gai.goods_id = g.id')
            ->where($cmap)
            ->group('gc.name,g.id')
            ->field('gc.id as class_id,gc.name as class_name,gc.sort,g.id as goods_id,g.goods_name,g.v_sale,g.sm_pic,min(shop_price)as price')
            ->order('sort asc,goods_id desc')
            ->select();
        // dump($goods);
        $arr = array();
        foreach ($goods as $key => $value) {
            $arr[$value['class_name']][] = $value;
        }
        // dump($arr);
        $this->assign('arr', $arr);
        $this->assign('activity', $activity);
        $this->assign('shop', $shop);
        $this->assign('notic', $notic);
        $this->assign('picinfo', $picinfo);
        $this->display();
    }

    public function save_top_id()
    {
        $top_id = I('top_id');
        session('top_id', $top_id);
    }
    public function pfuli()
    {
        $this->display();
    }

    public function notice()
    {
        $data = M()->table('__NOTICE__ n')
            ->field('n.*,FROM_UNIXTIME(n.create_time,"%m") as times,FROM_UNIXTIME(n.create_time,"%d") as addtime')->select();
        // dump($data);
        $this->assign('pic', $pic);
        $this->assign('data', $data);
        $this->display();
    }
    public function goods()
    {
        $goods = M('activity_img')->select();
        $this->assign('goods', $goods);
        $this->display();

    }
    //商品搜索页面
    public function search()
    {
        $search = I("search");
        $map['goods_name'] = array("like", "%$search%");
        $data              = M()->table('__GOODS__ g')
            ->where(array('g.is_on_sale' => 1, 'g.is_delete' => 0))
            ->where($map)
            ->field('g.id,g.sm_pic,g.goods_name')
            ->select();
			
		foreach($data as $key=>$value){
			$cc= M('goods_attribute_info')->where(array('goods_id' => $value['id']))->field('min(market_price) as min_market_price,min(shop_price) as min_shop_price')->select();
			$data[$key]['shop_price']=$cc[0]['min_shop_price'];
		}
		
        $this->assign('count', count($data));
        $this->assign('data', $data);
        $this->display();
    }

    public function wx_callback()
    {

        $appid  = "wx6df7cb139d86f3e7";
        $secret = "6cb7d92fee9845212040f7097133658d";
        if (!isset($_GET['code']) || empty($_GET['code'])) {
            $callback = 'http://www.ysc998.com/wx.php/home/index/index'; //回调地址
            //-------生成唯一随机串防CSRF攻击
            $state    = md5(uniqid(rand(), true));
            $callback = urlencode($callback);
            $wxurl    = "https://open.weixin.qq.com/connect/oauth2/authorize" .
                "?appid=" . $appid .
                "&redirect_uri=" . $callback .
                "&response_type=code&scope=snsapi_userinfo&state={$state}#wechat_redirect";
            header("Location: $wxurl");
            exit;
        }

        $code      = I('code');
        $oauth2Url = "https://api.weixin.qq.com/sns/oauth2/access_token?appid=" . $appid . "&secret=" . $secret . "&code=" . $code . "&grant_type=authorization_code";
        $oauth2    = $this->getJson($oauth2Url);
        $info      = "https://api.weixin.qq.com/sns/userinfo?access_token=" . $oauth2['access_token'] . "&openid=" . $oauth2['openid'] . "&lang=zh_CN";
        $userinfo  = $this->getJson($info);
        // dump($userinfo);
        \Think\Log::record("=======================================" . var_export($userinfo, true));
        // $user_info = $userinfo; //用户基本信息
        $open_id = $userinfo['openid']; //用户的wx open_id 唯一值
        $wx_name = $userinfo['nickname']; //用户wx 昵称
        // 确认此open_id是否已有用户绑定
        // dump($open_id);
        // dump($wx_name);
        $map_is_not['openid'] = $open_id;
        $is_not               = M('user')->where($map_is_not)->find();
        //没有用户绑定的情况下 写入user表后 跳转到绑定页面
        if (!$is_not) {
            //写入user表
            $user                         = M('user');
            $user->openid                 = $open_id;
            $user->username               = $wx_name;
            $user->usertype               = 0;
            $user->privilege_hierarchy_id = 0;
            $user->avatar                 = $userinfo['headimgurl']; //头像
            $user->province               = $userinfo['province']; //省
            $user->city                   = $userinfo['city']; //市（拉取的用户信息没有区信息）
            //判断是否写入成功
            $user_id = $user->add();
            if ($user_id) {
                cookie('user_id', $user_id);
                cookie('wx_name', $wx_name);
            }
        } else {
            $data = $is_not; //已经写入过数据但没有绑定手机
            // dump($data);

            // pp($data);
            cookie('user_id', $data['id']);
            cookie('wx_name', $wx_name);
        }

    }

    public function getJson($url)
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        $output = curl_exec($ch);
        curl_close($ch);
        return json_decode($output, true);
    }
}
